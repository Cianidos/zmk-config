/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt { tapping-term-ms = <180>; };

&mt { tapping-term-ms = <180>; };

/ {
    macros {
        tmp_screenshot: tmp_screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(LS(NUMBER_4)))>;
            label = "TMP_SCREENSHOT";
        };

        screenshot_menu: screenshot_menu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(LG(N5)))>;
            label = "SCREENSHOT_MENU";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp TAB           &kp Q   &kp W   &kp E   &kp R         &kp T                                                &kp Y                   &kp U             &kp I      &kp O    &kp P          &kp GRAVE
&kp LEFT_CONTROL  &kp A   &kp S   &kp D   &kp F         &kp G                                                &kp H                   &kp J             &kp K      &kp L    &kp SEMICOLON  &kp SQT
&kp LEFT_SHIFT    &kp Z   &kp X   &kp C   &kp V         &kp B                                                &kp N                   &kp M             &kp COMMA  &kp DOT  &kp SLASH      &kp BACKSLASH
&trans            &trans  &trans  &trans  &kp EQUAL     &trans                   &kp LBKT       &kp RBKT     &trans                  &kp MINUS         &trans     &trans   &trans         &trans
                                  &trans  &kp LEFT_ALT  &mt LEFT_COMMAND ESCAPE  &lt 1 SPACE    &lt 2 ENTER  &mt LEFT_ALT BACKSPACE  &kp LEFT_COMMAND  &trans
            >;
        };

        layer_1 {
            bindings = <
&kp F1            &kp F2    &kp F3       &kp F4        &kp F5      &kp F6                         &kp F7     &kp F8         &kp F9        &kp F10               &kp F11                &kp F12
&kp LEFT_BRACKET  &kp N1    &kp N2       &kp NUMBER_3  &kp N4      &kp N5                         &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &kp RIGHT_BRACKET
&kp LEFT_BRACE    &kp EXCL  &kp AT_SIGN  &kp HASH      &kp DOLLAR  &kp PERCENT                    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE
&trans            &trans    &trans       &trans        &trans      &trans       &trans    &trans  &trans     &trans         &trans        &trans                &trans                 &trans
                                         &trans        &trans      &trans       &trans    &trans  &trans     &trans         &trans
            >;
        };

        layer_2 {
            bindings = <
&screenshot_menu  &trans        &trans        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans                          &trans          &trans          &trans        &trans     &trans     &trans
&tmp_screenshot   &trans        &trans        &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans                          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp EQUAL  &kp MINUS
&trans            &trans        &trans        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans                          &trans          &trans          &trans        &trans     &trans     &trans
&bt BT_CLR        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2          &trans                 &out OUT_TOG  &trans    &trans  &trans          &trans          &trans        &trans     &trans     &out OUT_TOG
                                              &trans                &trans                 &trans        &trans    &trans  &trans          &trans          &trans
            >;
        };
    };
};
